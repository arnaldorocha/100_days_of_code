# Importa o m√≥dulo random para gerar n√∫meros aleat√≥rios
import random

# Importa o m√≥dulo time para criar pausas (delays) na execu√ß√£o
import time

# Importa o m√≥dulo os (n√£o √© usado, pode ser removido se quiser)
import os

# Tenta importar o m√≥dulo winsound (dispon√≠vel apenas no Windows) para tocar sons
try:
    import winsound
    SOUND_ENABLED = True  # Se o import funcionar, ativa os sons
except ImportError:
    SOUND_ENABLED = False  # Se n√£o funcionar (ex.: no Linux), desativa os sons

# Fun√ß√£o para exibir a anima√ß√£o de rolagem do dado
def roll_dice_animation():
    print("\nRolando o dado... üé≤\n")  # Mensagem inicial antes da rolagem

    # Faz 10 "rolagens r√°pidas" para simular o movimento do dado
    for _ in range(10):
        num = random.randint(1, 6)  # Gera um n√∫mero aleat√≥rio de 1 a 6
        print(f"\rN√∫mero: {num}", end='', flush=True)  # Atualiza o n√∫mero na mesma linha do terminal

        # Se o som estiver dispon√≠vel (no Windows), toca um beep para cada n√∫mero
        if SOUND_ENABLED:
            winsound.Beep(1000 + num * 200, 100)  # Frequ√™ncia varia conforme o n√∫mero (fica mais divertido)

        time.sleep(0.1)  # Pausa de 0,1 segundo para criar o efeito de "anima√ß√£o"

    print()  # Pula uma linha depois da anima√ß√£o

# Fun√ß√£o principal do programa
def main():
    while True:  # Loop para permitir que o usu√°rio jogue v√°rias vezes
        input("\nPressione Enter para lan√ßar o dado...")  # Aguarda o usu√°rio pressionar Enter

        roll_dice_animation()  # Chama a fun√ß√£o que faz a anima√ß√£o de rolagem

        final_result = random.randint(1, 6)  # Gera o resultado final do dado (de 1 a 6)
        print(f"\nüéâ Resultado final: {final_result} üéâ")  # Exibe o resultado para o usu√°rio

        # Se o som estiver ativado, toca uma sequ√™ncia de beeps para comemorar
        if SOUND_ENABLED:
            for freq in [800, 1000, 1200]:  # Frequ√™ncias diferentes para criar um "efeito de vit√≥ria"
                winsound.Beep(freq, 150)  # Cada beep dura 150 milissegundos

        # Pergunta se o usu√°rio deseja jogar novamente
        choice = input("\nQuer jogar novamente? (s/n): ").strip().lower()  # Converte resposta para min√∫scula

        if choice != 's':  # Se a resposta n√£o for "s" (sim), encerra o programa
            print("\nObrigado por jogar! At√© a pr√≥xima. üëã")
            break  # Sai do loop

# Verifica se o arquivo est√° sendo executado diretamente (n√£o importado como m√≥dulo)
if __name__ == "__main__":
    main()  # Chama a fun√ß√£o principal
